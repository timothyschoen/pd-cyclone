#N canvas 422 105 560 457 10;
#X obj 4 427 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 4 310 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 351 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 388 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 123 323 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 123 360 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 157 360 signal;
#X text 157 323 signal;
#X text 156 398 (none);
#X text 212 325 - input to sine function (must be given in radians);
#X text 212 361 - output of sine function;
#X text 58 88 Like [cyclone/cosx~] & [cyclone/tanx~] \, [sinx~] is properly designed for mathematical operations. Thus \, it expects an input in radians to calculate the sine of each input sample.;
#X obj 499 69 cyclone/dsponoff~;
#X obj 3 5 ./header sinx~;
#X text 22 61 Signal sine function (radian input);
#X obj 95 187 sig~;
#X obj 95 246 cyclone/snapshot~ 1;
#X obj 95 276 nbx 9 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 95 163 nbx 9 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 95 217 cyclone/sinx~;
#X text 343 220 see also:;
#X obj 332 242 expr~ sin($v1);
#X connect 15 0 19 0;
#X connect 16 0 17 0;
#X connect 18 0 15 0;
#X connect 19 0 16 0;
