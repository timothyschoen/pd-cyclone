#N canvas 479 64 567 451 10;
#X obj 5 420 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 5 303 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 5 345 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 5 386 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 124 316 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 124 357 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 158 316 signal;
#X text 158 357 signal;
#X text 157 395 (none);
#X text 214 316 - input to tangent function (in radians);
#X text 75 89 Like [cyclone/cosx~] & [cyclone/sinx~] \, [tanx~] is properly designed for mathematical operations. Thus \, it expects an input in radians to calculate the tangent of each input sample.;
#X obj 499 69 cyclone/dsponoff~;
#X obj 2 3 ./header tanx~;
#X text 22 61 Signal tangent function (radian input);
#X obj 159 181 sig~;
#X obj 159 240 cyclone/snapshot~ 1;
#X obj 159 270 nbx 9 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 159 157 nbx 9 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 159 211 cyclone/tanx~;
#X text 214 357 - the tangent of the input.;
#X text 343 220 see also:;
#X obj 332 242 expr~ tan($v1);
#X connect 14 0 18 0;
#X connect 15 0 16 0;
#X connect 17 0 14 0;
#X connect 18 0 15 0;
