#N canvas 473 24 562 448 10;
#X obj 2 422 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 2 319 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 356 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 391 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 135 365 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 163 365 signal;
#X text 161 328 signal;
#X text 164 400 (none);
#X obj 135 329 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 219 328 - input to arc-cosine function;
#X text 219 365 - the arc-cosine of the input;
#X obj 2 4 header acos~;
#X obj 16 62 cnv 10 10 10 empty empty Signal\ arc-cosine\ function 1 5 0 14 #ffffff #000000 0;
#X obj 165 192 sig~;
#X obj 165 251 cyclone/snapshot~ 1;
#X obj 165 281 nbx 9 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 165 168 nbx 9 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 165 222 cyclone/acos~;
#X obj 495 69 dsponoff~;
#X text 350 231 see also:;
#X obj 337 259 expr~ acos($v1);
#X text 59 94 Use [acos~] to output the arc-cosine of each input sample. Mostly useful just for mathematical reasons. The input is from -1 to 1 and th output is from 0 to pi. For input values outside the -1 to 1 range \, the output is zero!, f 65;
#X connect 13 0 17 0;
#X connect 14 0 15 0;
#X connect 16 0 13 0;
#X connect 17 0 14 0;
