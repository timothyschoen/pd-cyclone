#N canvas 401 49 563 591 10;
#X obj 6 561 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 6 480 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 518 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 81 492 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 81 424 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 6 410 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 81 446 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 103 448 float/signal;
#X obj 81 424 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 108 532 1) float -;
#X text 139 423 signal;
#X text 76 91 [modulo~] or [%~] is a signal remainder operator. The left signal is divided by the right inlet input (or argument) \, and the remainder is output.;
#X text 194 422 - input to modulo operation;
#X text 194 447 - a value by which to divide the incoming signal;
#X text 194 493 - the modulo of the operation (remainder of the division);
#X text 139 492 signal;
#X text 178 532 a value by which to divide the incoming signal (default 0);
#X obj 499 69 cyclone/dsponoff~;
#X obj 2 5 ./header %~;
#X text 22 61 Modulo for signals;
#X obj 90 249 cyclone/snapshot~ 1;
#X obj 90 156 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 153 156 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 153 182 sig~;
#X obj 90 182 sig~;
#X obj 90 280 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 90 218 cyclone/%~, f 11;
#X obj 380 170 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 263 157 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 263 183 sig~;
#X obj 263 250 cyclone/snapshot~ 1;
#X obj 263 281 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 263 212 cyclone/modulo~ 10, f 20;
#X obj 30 344 cyclone-help;
#X text 36 322 see also:;
#X text 21 366 for loading details and other operators, f 19;
#X text 163 330 This is a Vanilla alternative., f 17;
#X obj 483 368 open-else;
#X text 482 326 click;
#X msg 483 346 op~;
#X text 299 345 Plugdata users or those with ELSE can also use [else/op~] as a better alternative., f 28;
#X obj 156 364 expr~ fmod($v1 \, $v2);
#X connect 20 0 25 0;
#X connect 21 0 24 0;
#X connect 22 0 23 0;
#X connect 23 0 26 1;
#X connect 24 0 26 0;
#X connect 26 0 20 0;
#X connect 27 0 32 1;
#X connect 28 0 29 0;
#X connect 29 0 32 0;
#X connect 30 0 31 0;
#X connect 32 0 30 0;
#X connect 39 0 37 0;
