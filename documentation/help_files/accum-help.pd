#N canvas 489 48 558 543 10;
#X obj 3 329 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 448 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 482 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 101 399 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X msg 126 151 set \$1;
#X obj 101 458 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 101 423 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 101 341 cnv 17 3 52 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 180 213 cyclone/accum 4;
#X text 154 342 bang;
#X text 148 360 float;
#X text 148 400 float;
#X text 148 423 float;
#X obj 2 517 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 91 148 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 52 85 [accum] accumulates to a value by either adding an increment value to it or mulplying it by a given factor.;
#X text 213 152 set/output a value;
#X text 257 173 increment addition;
#X text 304 193 increment multiplier;
#X text 162 130 set value;
#X obj 180 242 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 253 241 accumulated value;
#N canvas 690 66 473 365 more_examples 0;
#X obj 109 121 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 109 157 t b b b;
#X obj 264 58 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 320 222 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X msg 359 248 2;
#X msg 196 182 2;
#X obj 264 94 accum;
#X msg 230 100 1;
#X text 182 183 *;
#X text 138 182 +;
#X obj 331 95 f;
#X obj 359 95 + 1;
#X text 247 28 as a counter:;
#X text 308 95 =;
#X obj 264 132 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 331 132 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 320 312 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 320 273 accum 2;
#X obj 286 276 * 2;
#X obj 257 276 f 2;
#X obj 257 305 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 267 186 double each time;
#X obj 109 250 nbx 8 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 109 215 accum 4, f 15;
#X msg 152 182 3;
#X text 31 83 Initial value times 2 plus 3 at each iteration:, f 16;
#X connect 0 0 1 0;
#X connect 1 0 23 0;
#X connect 1 1 24 0;
#X connect 1 2 5 0;
#X connect 2 0 6 0;
#X connect 2 0 10 0;
#X connect 3 0 17 0;
#X connect 3 0 19 0;
#X connect 4 0 17 2;
#X connect 5 0 23 2;
#X connect 6 0 7 0;
#X connect 6 0 14 0;
#X connect 7 0 6 1;
#X connect 10 0 11 0;
#X connect 10 0 15 0;
#X connect 11 0 10 1;
#X connect 17 0 4 0;
#X connect 17 0 16 0;
#X connect 18 0 19 1;
#X connect 19 0 18 0;
#X connect 19 0 20 0;
#X connect 23 0 22 0;
#X connect 24 0 23 1;
#X restore 423 155 pd more_examples;
#X text 112 378 set <float>;
#X text 203 342 - output accumulated value, f 51;
#X text 203 378 - sets a new value to be accumulated;
#X text 203 360 - sets a new value to be accumulated and outputs it;
#X text 203 401 - add to current value, f 51;
#X text 203 427 - multiply with current value, f 51;
#X text 148 459 float;
#X text 203 492 - sets initial value (default 0), f 52;
#X text 203 459 - accumulated value, f 52;
#X text 130 492 1) float;
#X floatatom 267 193 5 0 0 0 - - - 0;
#X floatatom 223 173 5 0 0 0 - - - 0;
#X floatatom 180 153 5 0 0 0 - - - 0;
#X floatatom 126 131 5 0 0 0 - - - 0;
#X obj 15 35 cnv 10 10 10 empty empty Accumulate\ to\ a\ value 8 25 0 14 #000000 #000000 0;
#X obj 3 2 ./header accum;
#X text 110 289 see also:;
#X text 177 284 Plugdata users or those with ELSE can also use [else/add] as an alternative, f 38;
#X text 471 278 click:;
#X obj 443 300 open-else;
#X msg 443 279 add;
#X connect 4 0 8 0;
#X connect 8 0 20 0;
#X connect 14 0 8 0;
#X connect 33 0 8 2;
#X connect 34 0 8 1;
#X connect 35 0 8 0;
#X connect 36 0 4 0;
#X connect 43 0 42 0;
